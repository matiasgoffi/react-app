{"ast":null,"code":"var _jsxFileName = \"/home/gaia/Escritorio/react-app/src/componentes/GifGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifItem } from \"./GifItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GifGrid = _ref => {\n  _s();\n\n  let {\n    category\n  } = _ref;\n  const {\n    images,\n    isLoading\n  } = useFetchGifs(category);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this) //si esta cargando en true ejecuto la tag h2\n    , /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(GifItem, {\n        title: image.title,\n        url: image.url // { ...image } se podria tmb hacer esto para esparcir todas las propr que trae image.\n\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GifGrid, \"dawKlH12TAydst/0CgtT/vGhcAM=\", false, function () {\n  return [useFetchGifs];\n});\n\n_c = GifGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"names":["React","useFetchGifs","GifItem","GifGrid","category","images","isLoading","map","image","title","url","id"],"sources":["/home/gaia/Escritorio/react-app/src/componentes/GifGrid.js"],"sourcesContent":["import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifItem } from \"./GifItem\";\n\n\nexport const GifGrid = ( { category }) => {\n\nconst { images, isLoading } = useFetchGifs( category )\n\n\n  return (\n    <>\n    <h3>{category}</h3>\n    \n    {\n      isLoading && (<h2>Cargando...</h2>) //si esta cargando en true ejecuto la tag h2\n    }\n    <div className=\"card-grid\">\n    {\n         images.map( ( image ) => (\n            <GifItem \n              key={ image.id } \n              title= { image.title }\n              url= { image.url }\n              // { ...image } se podria tmb hacer esto para esparcir todas las propr que trae image.\n              />\n         ))\n    \n    }\n    </div>\n    </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;;;AAGA,OAAO,MAAMC,OAAO,GAAG,QAAmB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAE1C,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAwBL,YAAY,CAAEG,QAAF,CAA1C;EAGE,oBACE;IAAA,wBACA;MAAA,UAAKA;IAAL;MAAA;MAAA;MAAA;IAAA,QADA,EAIEE,SAAS,iBAAK;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJhB,CAIsC;IAJtC,eAMA;MAAK,SAAS,EAAC,WAAf;MAAA,UAEKD,MAAM,CAACE,GAAP,CAAcC,KAAF,iBACT,QAAC,OAAD;QAEE,KAAK,EAAIA,KAAK,CAACC,KAFjB;QAGE,GAAG,EAAID,KAAK,CAACE,GAHf,CAIE;;MAJF,GACQF,KAAK,CAACG,EADd;QAAA;QAAA;QAAA;MAAA,QADH;IAFL;MAAA;MAAA;MAAA;IAAA,QANA;EAAA,gBADF;AAsBD,CA3BM;;GAAMR,O;UAEiBF,Y;;;KAFjBE,O"},"metadata":{},"sourceType":"module"}