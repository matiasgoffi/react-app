{"ast":null,"code":"var _jsxFileName = \"/home/gaia/Escritorio/matias-app/src/componentes/GifGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { getGifs } from \"./GetGifs\";\nimport { GifItem } from \"./GifItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GifGrid = _ref => {\n  _s();\n\n  let {\n    category\n  } = _ref;\n  const [images, setImages] = useState([]);\n\n  const getImages = async () => {\n    const newImages = await getGifs(category);\n    setImages(newImages);\n  };\n\n  useEffect(() => {\n    getImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: images.map(_ref2 => {\n        let {\n          id,\n          title\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(GifItem, {}, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GifGrid, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n\n_c = GifGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"names":["React","useState","useEffect","getGifs","GifItem","GifGrid","category","images","setImages","getImages","newImages","map","id","title"],"sources":["/home/gaia/Escritorio/matias-app/src/componentes/GifGrid.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { getGifs } from \"./GetGifs\";\nimport { GifItem } from \"./GifItem\";\n\n\nexport const GifGrid = ( { category }) => {\n\nconst [images, setImages] = useState([])\n\nconst getImages = async() => {\n  const newImages = await getGifs(category );\n  setImages(newImages);\n\n}\n  \n useEffect( () => {\n  getImages();\n }, [])\n\n  return (\n    <>\n    <h3>{category}</h3>\n\n    <ol>\n    {\n         images.map( ({id, title}) => (\n            <GifItem key={ id } />\n         ))\n    \n    }\n    </ol>\n    </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;;;AAGA,OAAO,MAAMC,OAAO,GAAG,QAAmB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAE1C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;EAEA,MAAMQ,SAAS,GAAG,YAAW;IAC3B,MAAMC,SAAS,GAAG,MAAMP,OAAO,CAACG,QAAD,CAA/B;IACAE,SAAS,CAACE,SAAD,CAAT;EAED,CAJD;;EAMCR,SAAS,CAAE,MAAM;IAChBO,SAAS;EACT,CAFQ,EAEN,EAFM,CAAT;EAIC,oBACE;IAAA,wBACA;MAAA,UAAKH;IAAL;MAAA;MAAA;MAAA;IAAA,QADA,eAGA;MAAA,UAEKC,MAAM,CAACI,GAAP,CAAY;QAAA,IAAC;UAACC,EAAD;UAAKC;QAAL,CAAD;QAAA,oBACT,QAAC,OAAD,MAAeD,EAAf;UAAA;UAAA;UAAA;QAAA,QADS;MAAA,CAAZ;IAFL;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA,gBADF;AAcD,CA5BM;;GAAMP,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}